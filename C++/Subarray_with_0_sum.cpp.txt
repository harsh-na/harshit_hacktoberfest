/*Given an array of positive and negative numbers. Find if there
 is a subarray (of size at-least one) with 0 sum.*/
#include <bits/stdc++.h>
using namespace std;



class Solution{
    public:
    bool subArrayExists(int a[], int n)
    {
       unordered_map<int,int> m;
       int sum=0;
       for(int i=0;i<n;i++)
       {
           sum+=a[i];
           m[sum]++;
           if(m[sum]>1 || sum==0)
           return true;
       }
       return false;
    }
};


int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++)
	    cin>>arr[i];
	    Solution obj;
	    	if (obj.subArrayExists(arr, n))
		cout << "Yes\n";
	else
		cout << "No\n";
	}
	return 0;
} 